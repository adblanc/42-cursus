apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: ft_service
    task: monitoring
spec:
  ports:
    - port: 3000
      name: grafana
  selector:
    app: ft_service
    tier: grafana
  type: LoadBalancer

---

apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: grafana
  labels:
    app: ft_service
    task: monitoring
spec:
  selector:
    matchLabels:
      app: ft_service
      tier: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ft_service
        tier: grafana
    spec:
      containers:
      - image: my-grafana
        imagePullPolicy: Never
        name: grafana
        env:
        - name: GF_SERVER_HTTP_PORT
          valueFrom:
            secretKeyRef:
              name: grafana
              key: http_port
        - name: GF_AUTH_BASIC_ENABLED
          valueFrom:
            secretKeyRef:
              name: grafana
              key: auth_basic_enabled
        - name: GF_AUTH_ANONYMOUS_ENABLED
          valueFrom:
            secretKeyRef:
              name: grafana
              key: auth_ano_enabled
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          valueFrom:
            secretKeyRef:
              name: grafana
              key: auth_ano_org_role
        volumeMounts:
          - name: dashboards
            mountPath: /etc/grafana/provisioning/dashboards
          - name: datasources
            mountPath: /etc/grafana/provisioning/datasources
        ports:
        - containerPort: 3000
          hostPort: 3000
      volumes:
      - name: "dashboards"
        configMap:
          name: grafana-dashboards
      - name: "datasources"
        configMap:
          name: grafana-datasources
